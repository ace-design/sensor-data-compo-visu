package model.exploitation.toJavaScript.metaclasse;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 * Created by ivan on 18/07/2014.
 */
public class Pivot<T1 extends Comparable<T1>,T2> {

    private List<Source<T1,T2>> sources;
    private String indexName;

    public Pivot(String indexName){
        sources = new ArrayList<Source<T1,T2>>();
        this.indexName = indexName;
    }

    public String getIndexName() {
        return indexName;
    }

    public void setIndexName(String indexName) {
        this.indexName = indexName;
    }

    public void addSource(Source source){
        sources.add(source);
        source.setPivot(this);

    }

    public List<Source<T1,T2>> getSources(){
        return this.sources;
    }

    public T1 getFirstIndex() {
        T1 first = this.getSources().get(0).getPairs().get(0).getIndex();
        for (Source source :this.getSources()){
            for(Pair pair: (List<Pair>)source.getPairs()){
                if(first.compareTo((T1) pair.getIndex())>0)
                    first = (T1) pair.getIndex();
            }
        }
        return first;
    }

    public HashMap<Pair,String> getPairsFromIndex(Object t0) {
        HashMap<Pair,String> res = new HashMap<>();
        for(Source source : this.getSources()) {
            for(Pair pair : (List<Pair>)source.getPairs()){
                if(pair.getIndex().compareTo(t0)==0) {
                    res.put(pair, source.getValueName());
                }
            }
        }
        return res;
    }

    public boolean isEmpty() {
        boolean res = true;
        for(Source source : this.getSources())
            if(!source.isEmpty())
                res=false;
        return res;
    }

    public void remove(Source<T1, T2> source) {
        this.sources.remove(source);
    }
}
