package model.exploitation.toJavaScript.implementation;

import model.exploitation.toJavaScript.metaclasse.Pair;
import model.exploitation.toJavaScript.metaclasse.Pivot;
import org.json.JSONWriter;
import model.exploitation.toJavaScript.interfaces.DataTargetFormater;

import java.io.StringWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.*;

/**
 * Created by Ivan Logre on 01/07/2014.
 */
public class AmChartFormater implements DataTargetFormater {


    @Override
    public String convertData2LibraryFormat(Pivot pivot) {
        StringWriter dataToPrint = new StringWriter();
        JSONWriter rootDest = new JSONWriter(dataToPrint);
        rootDest.array();

        while(!pivot.isEmpty()){
            Object t0 = pivot.getFirstIndex();
            HashMap<Pair,String> allValues = pivot.getPairsFromIndex(t0);
            // index = ti
            rootDest.object();
            rootDest.key(pivot.getIndexName());
            rootDest.value(t0.toString());

            for(Pair p : allValues.keySet()){
                rootDest.key(allValues.get(p));
                rootDest.value(p.getValue());
            }
            rootDest.endObject();
            for(Pair p : allValues.keySet()){
                p.getSource().remove(p);
            }
        }
        rootDest.endArray();

        return dataToPrint.toString();
    }

    @Override
    public String convertTimedData2LibraryFormat(Pivot pivot) {

        StringWriter dataToPrint = new StringWriter();
        JSONWriter rootDest = new JSONWriter(dataToPrint);
        rootDest.array();
        DateFormat df = new SimpleDateFormat("yy-MM-dd HH:mm:ss", Locale.ENGLISH);

        while(!pivot.isEmpty()){
            Object t0 = pivot.getFirstIndex();
            HashMap<Pair,String> allValues = pivot.getPairsFromIndex(t0);

            // index = ti
            rootDest.object();
            rootDest.key(pivot.getIndexName());
            Date date = new Date((Long) t0*1000);
            rootDest.value(df.format(date));

            for(Pair p : allValues.keySet()){
                rootDest.key(allValues.get(p));
                rootDest.value(p.getValue());
            }
            rootDest.endObject();
            for(Pair p : allValues.keySet()){
                p.getSource().remove(p);
            }
        }
        rootDest.endArray();

        return dataToPrint.toString();
    }
}
