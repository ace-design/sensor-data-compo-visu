package model.exploitation.toJavaScript.implementation;

import metaclasses.Resource;
import model.exploitation.toJavaScript.metaclasse.Source;
import org.json.JSONArray;
import org.json.JSONObject;
import utils.FileOperation;
import model.exploitation.toJavaScript.interfaces.DataDeserializer;

/**
 * Created by Ivan Logre on 01/07/2014.
 */
public class SmartCampusDeserializer implements DataDeserializer {

    //TODO comment
    public Source serializedResource2Pivot(Resource resource){
        try {
            String serialized = FileOperation.getStringFromFile(resource.getUrl());
            Source res = new Source(resource.getSerie().getName()+resource.getName());
            JSONObject rootSource = new JSONObject(serialized);
            JSONArray values = rootSource.getJSONArray("values");
            for (int i = values.length() - 1; i >= 0; i--) {
                JSONObject v = values.getJSONObject(i);
                res.put(v.getLong(resource.getIndex().getName()), v.getDouble(resource.getSerie().getName()));  // allow to compare factorize data set with different basetime
            }
            return res;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
}
