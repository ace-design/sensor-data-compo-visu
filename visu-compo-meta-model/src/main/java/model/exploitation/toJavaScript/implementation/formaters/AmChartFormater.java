package model.exploitation.toJavaScript.implementation.formaters;

import model.exploitation.toJavaScript.metaclasse.ElementInstance;
import model.exploitation.toJavaScript.metaclasse.VisualizationInstance;
import org.json.JSONWriter;
import model.exploitation.toJavaScript.interfaces.DataTargetFormater;

import java.io.StringWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.*;

/**
 * Created by Ivan Logre on 01/07/2014.
 */
public class AmChartFormater implements DataTargetFormater {


    @Override
    public String convertData2LibraryFormat(VisualizationInstance vi) {
        StringWriter dataToPrint = new StringWriter();
        JSONWriter rootDest = new JSONWriter(dataToPrint);
        rootDest.array();

        //TODO : Composite part

        // Atomic part (//TODO will be a loop)
        while(!vi.isEmpty()){
            List<ElementInstance> firsts = vi.getFirstIndexes();
            rootDest.object();
            rootDest.key(firsts.get(0).father.getName());
            rootDest.value(firsts.get(0).getValue().toString());
            for(ElementInstance first : firsts) {
                for (ElementInstance ei : first.getValues()) {
                    rootDest.key(ei.father.getName()+'_'+ ei.resourceInstance.father.getName());
                    rootDest.value(ei.getValue());
                }
                first.getResourceInstance().removeKey(first);
            }
            rootDest.endObject();
        }
        rootDest.endArray();
        return dataToPrint.toString();
    }

    @Override
    public String convertTimedData2LibraryFormat(VisualizationInstance vi) {

        StringWriter dataToPrint = new StringWriter();
        JSONWriter rootDest = new JSONWriter(dataToPrint);
        rootDest.array();
        DateFormat df = new SimpleDateFormat("yy-MM-dd HH:mm:ss", Locale.ENGLISH);

        while(!vi.isEmpty()){
            List<ElementInstance> firsts = vi.getFirstIndexes();
            rootDest.object();
            // index = ti
            rootDest.key(firsts.get(0).father.getName());
            Date date = new Date((Long)firsts.get(0).getValue()*1000);

            rootDest.value(df.format(date));
            for(ElementInstance first : firsts) {
                for(ElementInstance ei : first.getValues()){
                    rootDest.key(ei.father.getName()+'_'+ei.resourceInstance.father.getName());
                    rootDest.value(ei.getValue());
                }
                first.getResourceInstance().removeKey(first);
            }
            rootDest.endObject();

        }
        rootDest.endArray();
        return dataToPrint.toString();
    }
}
