package model.exploitation.toJavaScript.implementation.formaters;

import model.exploitation.toJavaScript.interfaces.DataTargetFormater;
import model.exploitation.toJavaScript.metaclasse.ElementInstance;
import model.exploitation.toJavaScript.metaclasse.VisualizationInstance;
import org.json.JSONWriter;

import java.io.StringWriter;

/**
 * Created by ivan on 01/09/2014.
 */
public class MapEtienneFormater  implements DataTargetFormater {

    @Override
    //TODO ce n'est pas du tout le format d'Etienne, mais je veux que Ã§a compile !
    public String convertData2LibraryFormat(VisualizationInstance vi) {
        StringWriter dataToPrint = new StringWriter();
        JSONWriter rootDest = new JSONWriter(dataToPrint);
        rootDest.array();

        while(!vi.isEmpty()){
            ElementInstance first = vi.getFirstIndex();
            rootDest.object();
            rootDest.key(first.father.getName());
            rootDest.value(first.getValue().toString());
            for(ElementInstance ei : first.getValues()){
                rootDest.key(ei.father.getName());
                rootDest.value(ei.getValue());
            }
            rootDest.endObject();
            first.getResourceInstance().removeKey(first);
        }
        rootDest.endArray();
        return dataToPrint.toString();
    }

    @Override
    public String convertTimedData2LibraryFormat(VisualizationInstance vi) {
        return null; //TODO
    }
}