package model.exploitation.toJavaScript.implementation;

import model.exploitation.toJavaScript.metaclasse.Pair;
import model.exploitation.toJavaScript.metaclasse.Pivot;
import model.exploitation.toJavaScript.interfaces.DataTargetFormater;
import model.exploitation.toJavaScript.metaclasse.Source;

import java.util.HashMap;
import java.util.TreeSet;

/**
 * Created by Ivan Logre on 01/07/2014.
 */
public class HighChartFormater implements DataTargetFormater {

    @Override
    public String convertData2LibraryFormat(Pivot pivot) {
        //transform the hashmap(time,value) in a format understandable by AmChart
        StringBuilder dataToPrint = new StringBuilder();
        dataToPrint.append("[");
        dataToPrint.append("\n");

        while(!pivot.isEmpty()) {
            Object t0 = pivot.getFirstIndex();
            HashMap<Pair, String> allValues = pivot.getPairsFromIndex(t0);

            dataToPrint.append("[");
            dataToPrint.append("\""+t0.toString()+"\"");

            for(Pair p : allValues.keySet()) {
                dataToPrint.append(",");
                dataToPrint.append(p.getValue());
            }
            dataToPrint.append("],");
            dataToPrint.append("\n");

            for(Pair p : allValues.keySet()){
                p.getSource().remove(p);
            }
        }

        dataToPrint.deleteCharAt(dataToPrint.lastIndexOf(","));
        dataToPrint.append("\n");
        dataToPrint.append("]");

        return dataToPrint.toString();
    }

    //TODO
    @Override
    public String convertTimedData2LibraryFormat(Pivot pivot) {
        /*HashMap<Double,Double> HM_time_value = data.getHM_dataset();

        //transform the hashmap(time,value) in a format understandable by AmChart
        StringBuilder dataToPrint = new StringBuilder();
        TreeSet<Double> set = new TreeSet<>(HM_time_value.keySet());
        dataToPrint.append("[");
        dataToPrint.append("\n");
        for (Double i : set) {
            dataToPrint.append("[");
            dataToPrint.append(i);
            dataToPrint.append(",");
            dataToPrint.append(HM_time_value.get(i));
            dataToPrint.append("],");
            dataToPrint.append("\n");
        }
        dataToPrint.deleteCharAt(dataToPrint.lastIndexOf(","));
        dataToPrint.append("\n");
        dataToPrint.append("]");


        return dataToPrint.toString();*/
        return "";
    }
}
