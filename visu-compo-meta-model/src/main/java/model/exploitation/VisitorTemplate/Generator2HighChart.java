package model.exploitation.VisitorTemplate;

import exception.VisitorException;
import metaclasses.Column;
import metaclasses.Resource;
import metaclasses.Visualization;
import model.exploitation.toJavaScript.implementation.*;
import model.exploitation.toJavaScript.interfaces.DataDeserializer;
import model.exploitation.toJavaScript.metaclasse.Pivot;
import model.exploitation.toJavaScript.metaclasse.Source;
import org.stringtemplate.v4.ST;
import utils.NameCorrectness;

import static java.util.UUID.randomUUID;

/**
 * Created by ivan on 17/07/2014.
 */
public class Generator2HighChart extends Generator{

    @Override
    public void visit(Visualization visualization) throws VisitorException {
        //Chart
        ST st_chart = Generator.highgroup.getInstanceOf("highchart");
        st_chart.add("chartname", visualization.getName());

        ST st_options = highgroup.getInstanceOf("pie_options");
        st_chart.add("options", st_options);

        String title ="";

        for(Resource resource : visualization.getResources()){
            resource.accept(this);
            st_chart.add("graphs",symbolTable.get(visualization.getName()+resource.getUrl()));
            title = title+resource.getName();
        }
        st_chart.add("title",title);

        symbolTable.put(visualization.getName(),st_chart);


        //by javascript
        Pivot pivot = new Pivot(visualization.getIndexName());
        for(Resource resource : visualization.getResources()) {

            DataDeserializer dd = null;
            switch (resource.getFormat()) {
                case SenML:
                    dd = new SenMLDeserializer();
                    break;
                case SmartCampus:
                    dd = new SmartCampusDeserializer();
                    break;
                case Stacked:
                    dd = new StackedDeserializer();
                    break;
            }

            Source current = dd.serializedResource2Pivot(resource);
            pivot.addSource(current);
        }

        ST st_data = Generator.group.getInstanceOf("data");
        st_data.add("dataname","data_"+visualization.getName());
        st_data.add("datavalues",new HighChartFormater().convertData2LibraryFormat(pivot));
        symbolTable.put("data_"+visualization.getName(),st_data);
    }

    @Override
    public void visit(Resource resource) throws VisitorException {
        String graphName = "mygraph_"+ NameCorrectness.format(randomUUID().toString());

        //Graph
        ST st_graph = highgroup.getInstanceOf("graph");
        st_graph.add("dataname", "data_"+resource.getVisualization().getName());

        //Find the right specialization pattern for the wanted widget
        ST st_graphspe = highgroup.getInstanceOf("graph"+resource.getVisualization().getWidgetName().replace(" ",""));

        st_graph.add("graphspe",st_graphspe);

        symbolTable.put(resource.getVisualization().getName()+resource.getUrl(),st_graph);
    }
}
